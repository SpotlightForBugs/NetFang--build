name: Build Kali ARM Images

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        script: ["raspberry-pi-64-bit.sh", "raspberry-pi-zero-2-w.sh"]
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4

      - name: Verify kali-arm exists
        run: |
          [ -d "kali-arm" ] || { echo "Error: kali-arm directory missing!"; exit 1; }

      - name: Set up QEMU and dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            qemu-user-static \
            binfmt-support \
            systemd-container \
            debootstrap \
            kpartx \
            parted \
            udev \
            dosfstools \
            rsync \
            xz-utils
          sudo update-binfmts --enable qemu-aarch64
          cd kali-arm
          sudo ./common.d/build_deps.sh
          cd ..

      - name: Build image
        run: |
          cd kali-arm
          export TERM=xterm
          chmod +x ${{ matrix.script }}
          sudo --preserve-env=TERM ./${{ matrix.script }} --desktop=none -s

      - name: Handle built images
        run: |
          cd kali-arm/images
          
          # Find the latest built image (either .img or .img.xz)
          img_file=$(ls -t *.img* | head -n 1)
          
          # If compressed, decompress first
          if [[ "$img_file" == *.xz ]]; then
            echo "Decompressing $img_file..."
            unxz "$img_file"
            img_file="${img_file%.xz}"
          fi
          
          # Move to root images directory
          mkdir -p ../../images/
          mv "$img_file" "../../images/"
          
          # Create SHA256 checksum
          cd ../../images/
          sha256sum "$img_file" > "${img_file}.sha256"
          echo "Image ready: $img_file"

      - name: Publish images
        if: matrix.script == 'raspberry-pi-zero-2-w.sh'
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add images/
          git commit -m "Add built images from $(date +%Y-%m-%d)"
          git push

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.script }}-image
          path: images/
          retention-days: 3
