name: Build Kali ARM Images

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.runner }}
    strategy:
      matrix:
        include:
          - script: "raspberry-pi-64-bit.sh"
            runner: "ubuntu-24.04-arm"
            arch: "arm64"
            cache-key: "arm64-deps"
          - script: "raspberry-pi-zero-2-w.sh"
            runner: "ubuntu-22.04-arm"
            arch: "armhf"
            cache-key: "armhf-deps"
      fail-fast: false
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4

      - name: Ensure kali-arm directory exists
        run: mkdir -p kali-arm

      - name: Verify kali-arm exists
        run: |
          [ -d "kali-arm" ] || { echo "Error: kali-arm directory missing!"; exit 1; }

      - name: Cache system dependencies
        uses: actions/cache@v3
        id: sys-cache
        with:
          path: |
            /var/cache/apt
            /var/lib/apt
          key: ${{ runner.os }}-${{ matrix.cache-key }}-sys-${{ hashFiles('kali-arm/common.d/build_deps.sh') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.cache-key }}-sys-

      - name: Install core dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            systemd-container \
            debootstrap \
            kpartx \
            parted \
            udev \
            dosfstools \
            rsync \
            xz-utils \
            qemu-user-static \
            binfmt-support
          sudo apt-get clean

      - name: Run Kali build deps
        run: |
          cd kali-arm
          sudo ./common.d/build_deps.sh
          cd ..

      - name: Setup QEMU
        run: |
          # For ARMHF builds, ensure proper QEMU support
          if [ "${{ matrix.arch }}" == "armhf" ]; then
            sudo apt-get install -y qemu-system-arm
          fi
          sudo update-binfmts --enable
          sudo service binfmt-support start

      - name: Build image
        run: |
          cd kali-arm
          export TERM=xterm
          chmod +x ${{ matrix.script }}
          sudo --preserve-env=TERM ./${{ matrix.script }} --desktop=none -s || echo "Build failed, continuing for artifact collection"

      - name: Fix file permissions
        run: |
          sudo chown -R $(whoami):$(whoami) kali-arm/images

      - name: Install Git LFS
        run: |
          sudo apt-get update
          sudo apt-get install -y git-lfs
          git lfs install

      - name: Configure Git
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

      - name: Track large files with Git LFS
        run: |
          git lfs track "images/*.xz"
          git lfs track "images/*.sha256sum"
          git add .gitattributes
          git commit -m "Track large files with Git LFS" || echo "No changes to commit"

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.script }}-output-${{ matrix.arch }}
          path: kali-arm/images/
          retention-days: 3
          if-no-files-found: warn

      - name: Publish successful builds
        if: success()
        run: |
          mkdir -p images/
          cd kali-arm/images
          for file in *; do
            [ -f "$file" ] || continue
            mv "$file" "../../images/${file%.*}-${{ matrix.arch }}.${file##*.}"
          done
          cd ../../
          git add images/
          git commit -m "Add ARM-built images from $(date +%Y-%m-%d)" || echo "No changes to commit"
          git push origin master
