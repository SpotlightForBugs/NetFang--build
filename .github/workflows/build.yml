name: Build Kali ARM Images

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.runner }}
    strategy:
      matrix:
        include:
          - script: "raspberry-pi-64-bit.sh"
            runner: "ubuntu-24.04-arm"
            arch: "arm64"
            cache-key: "arm64-deps"
          - script: "raspberry-pi-zero-2-w.sh"
            runner: "ubuntu-22.04-arm"
            arch: "armhf"
            cache-key: "armhf-deps"
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4

      - name: Verify kali-arm exists
        run: |
          [ -d "kali-arm" ] || { echo "Error: kali-arm directory missing!"; exit 1; }

      - name: Cache system dependencies
        uses: actions/cache@v3
        id: sys-cache
        with:
          path: |
            /var/cache/apt
            /var/lib/apt
          key: ${{ runner.os }}-${{ matrix.cache-key }}-sys-${{ hashFiles('kali-arm/common.d/build_deps.sh') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.cache-key }}-sys-

      - name: Cache Kali dependencies
        uses: actions/cache@v3
        id: kali-cache
        with:
          path: kali-arm/deps
          key: ${{ runner.os }}-${{ matrix.cache-key }}-kali-${{ hashFiles('kali-arm/common.d/build_deps.sh') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.cache-key }}-kali-

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            systemd-container \
            debootstrap \
            kpartx \
            parted \
            udev \
            dosfstools \
            rsync \
            xz-utils
          sudo apt-get clean

      - name: Install Kali build dependencies
        run: |
          cd kali-arm
          mkdir -p deps
          sudo ./common.d/build_deps.sh
          touch deps/.installed
          cd ..

      - name: Build image
        run: |
          cd kali-arm
          export TERM=xterm
          chmod +x ${{ matrix.script }}
          sudo --preserve-env=TERM ./${{ matrix.script }} --desktop=none -s

      - name: Process artifacts
        run: |
          cd kali-arm/images
          
          # Fix permissions first
          sudo chown -R $USER:$USER .
          
          # Find only the image file (exclude checksums)
          img_file=$(ls -t *.img 2>/dev/null | head -n 1)
          if [[ -z "$img_file" ]]; then
            # If no .img file, look for .img.xz
            img_file=$(ls -t *.img.xz 2>/dev/null | head -n 1)
            [[ -z "$img_file" ]] && { echo "No image file found!"; exit 1; }
            
            # Decompress if needed
            echo "Decompressing $img_file..."
            unxz "$img_file"
            img_file="${img_file%.xz}"
          fi
          
          # Move the image file
          mkdir -p ../../images/
          base_name=$(basename "$img_file" .img)
          mv "$img_file" "../../images/${base_name}-${{ matrix.arch }}.img"
          
          # Handle checksum if exists
          if [[ -f "${img_file}.sha256sum" ]]; then
            mv "${img_file}.sha256sum" "../../images/${base_name}-${{ matrix.arch }}.img.sha256"
          else
            cd ../../images/
            sha256sum "${base_name}-${{ matrix.arch }}.img" > "${base_name}-${{ matrix.arch }}.img.sha256"
          fi

      - name: Publish images
        if: matrix.script == 'raspberry-pi-zero-2-w.sh'
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add images/
          git commit -m "Add ARM-built images from $(date +%Y-%m-%d)"
          git push

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.script }}-image-${{ matrix.arch }}
          path: images/
          retention-days: 3
